now give code samples of all basic features in react 


ChatGPT said:
Awesome! Here's a collection of basic React features with clear code samples and explanations. These are perfect for beginners and cover the essentials you'll use in most React apps.

‚úÖ 1. JSX Syntax
jsx
Copy
Edit
// JSXExample.js
function JSXExample() {
  const name = "React";
  return <h1>Hello, {name}!</h1>;
}
‚úÖ 2. Functional Components
jsx
Copy
Edit
// Greeting.js
function Greeting() {
  return <p>Welcome to React!</p>;
}
‚úÖ 3. Props
jsx
Copy
Edit
// Welcome.js
function Welcome(props) {
  return <h2>Hello, {props.name}!</h2>;
}

// Usage:
<Welcome name="Alice" />
‚úÖ 4. State with useState
jsx
Copy
Edit
// Counter.js
import { useState } from "react";

function Counter() {
  const [count, setCount] = useState(0);
  return (
    <div>
      <p>Clicked {count} times</p>
      <button onClick={() => setCount(count + 1)}>Increase</button>
    </div>
  );
}
‚úÖ 5. Event Handling
jsx
Copy
Edit
// ClickEvent.js
function ClickEvent() {
  const handleClick = () => alert("Button Clicked!");
  return <button onClick={handleClick}>Click Me</button>;
}
‚úÖ 6. Conditional Rendering
jsx
Copy
Edit
// Conditional.js
function Conditional({ isLoggedIn }) {
  return (
    <div>
      {isLoggedIn ? <p>Welcome Back!</p> : <p>Please Log In</p>}
    </div>
  );
}
‚úÖ 7. Lists & Keys
jsx
Copy
Edit
// ListExample.js
function ListExample() {
  const items = ["Apple", "Banana", "Orange"];
  return (
    <ul>
      {items.map((item, index) => <li key={index}>{item}</li>)}
    </ul>
  );
}
‚úÖ 8. Forms & Inputs
jsx
Copy
Edit
// SimpleForm.js
import { useState } from "react";

function SimpleForm() {
  const [name, setName] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    alert(`Hello, ${name}`);
  };

  return (
    <form onSubmit={handleSubmit}>
      <input value={name} onChange={(e) => setName(e.target.value)} placeholder="Enter Name" />
      <button type="submit">Submit</button>
    </form>
  );
}
‚úÖ 9. useEffect Hook
jsx
Copy
Edit
// Timer.js
import { useEffect, useState } from "react";

function Timer() {
  const [count, setCount] = useState(0);

  useEffect(() => {
    const timer = setInterval(() => setCount(c => c + 1), 1000);
    return () => clearInterval(timer);
  }, []);

  return <h2>Timer: {count}s</h2>;
}
‚úÖ 10. useRef Hook
jsx
Copy
Edit
// FocusInput.js
import { useRef } from "react";

function FocusInput() {
  const inputRef = useRef(null);

  const focusInput = () => inputRef.current.focus();

  return (
    <div>
      <input ref={inputRef} />
      <button onClick={focusInput}>Focus Input</button>
    </div>
  );
}
‚úÖ 11. useContext (Basic Example)
jsx
Copy
Edit
// ThemeContext.js
import { createContext, useContext } from "react";

const ThemeContext = createContext("light");

function ThemedButton() {
  const theme = useContext(ThemeContext);
  return <button style={{ backgroundColor: theme === "dark" ? "#333" : "#eee" }}>Theme: {theme}</button>;
}

// Usage
<ThemeContext.Provider value="dark">
  <ThemedButton />
</ThemeContext.Provider>
‚úÖ 12. React Router (Routing)
jsx
Copy
Edit
// App.js
import { BrowserRouter, Routes, Route, Link } from "react-router-dom";

function Home() {
  return <h2>üè† Home Page</h2>;
}
function About() {
  return <h2>‚ÑπÔ∏è About Page</h2>;
}

function App() {
  return (
    <BrowserRouter>
      <nav>
        <Link to="/">Home</Link>{" | "}
        <Link to="/about">About</Link>
      </nav>

      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/about" element={<About />} />
      </Routes>
    </BrowserRouter>
  );
}
If you'd like, I can package all these into a single mini React project you can run directly. Want that? Or want me to go deeper into any one feature (like forms, useEffect, or routing)?
